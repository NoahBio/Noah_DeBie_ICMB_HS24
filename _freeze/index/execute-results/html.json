{
  "hash": "f10dbf855beb430e84933ea4c6036f2e",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"About Page\"\n\nauthor: \"Noah De Bie\"\n---\n\n\n\n\nHey there :)\n\nThis website contains all the assignments completed for the Course 'Introduction to computational modeling of behavior'.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#load required packages\nlibrary(cowplot)\nlibrary(ggplot2)\n\n# Number of birds in the flock\nn_birds <- 20 \n\n# Randomly decide which birds are flying and which are sitting\nset.seed(Sys.time()) # Optional: to simulate different outcomes each time without being too random during development\nbird_type <- sample(c(\"flying\", \"sitting\"), size = n_birds, replace = TRUE)\n\n# Create a data frame with random positions, sizes, and angles\nbird_data <- data.frame(\n  x = runif(n_birds, -1, 1),     # Random x positions\n  y = runif(n_birds, -1, 1),     # Random y positions\n  size = runif(n_birds, 10, 50), # Random bird sizes\n  type = bird_type,              # Flying or sitting\n  angle = ifelse(bird_type == \"flying\",runif(n_birds, -30, 30), 0) # Flying birds upright, sitting birds with small angle variation\n)\n\n# Create a base ggplot\np <- ggplot() + \n  xlim(-1, 1) + ylim(-1, 1) +  # Set axis limits\n  theme_void()                 # Remove background and axes\n\n# Add birds to the plot\nfor (i in 1:n_birds) {\n  bird <- ifelse(bird_data$type[i] == \"flying\", \"🕊️\", \"🐦\") # Different emoji for flying and sitting birds\n  p <- p + \n    cowplot::draw_label(bird, \n                        x = bird_data$x[i], \n                        y = bird_data$y[i], \n                        size = bird_data$size[i], \n                        angle = bird_data$angle[i],  # Apply random rotation to sitting birds\n                        hjust = 0.5, vjust = 0.5)\n}\n\n# Display the flock of birds\np\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}